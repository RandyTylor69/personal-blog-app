{"ast":null,"code":"var _jsxFileName = \"C:\\\\UWO\\\\Summer-Projects\\\\Backend-as-well\\\\blog-app\\\\frontend\\\\src\\\\components\\\\CreateComment.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateComment(props) {\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    formData.append(\"postId\", props.postId);\n    // store the comment in the comments database\n    const res = await fetch(\"http://localhost:3001/comments\", {\n      method: \"POST\",\n      credentials: \"include\",\n      body: formData\n    });\n    const data = await res.json();\n    alert(data.message);\n    window.location.href = \"\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"comment-form\",\n    onSubmit: handleSubmit,\n    children: props.isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"content\",\n        maxLength: 300,\n        placeholder: \"Add something to the conversation!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Need to log in first in order to comment :)\",\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = CreateComment;\nvar _c;\n$RefreshReg$(_c, \"CreateComment\");","map":{"version":3,"names":["CreateComment","props","handleSubmit","e","preventDefault","formData","FormData","target","append","postId","res","fetch","method","credentials","body","data","json","alert","message","window","location","href","_jsxDEV","className","onSubmit","children","isLoggedIn","_Fragment","name","maxLength","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","$RefreshReg$"],"sources":["C:/UWO/Summer-Projects/Backend-as-well/blog-app/frontend/src/components/CreateComment.jsx"],"sourcesContent":["export default function CreateComment(props) {\r\n\r\n  async function handleSubmit(e){\r\n    e.preventDefault()\r\n    const formData = new FormData(e.target)\r\n    formData.append(\"postId\", props.postId)\r\n    // store the comment in the comments database\r\n    const res = await fetch(\"http://localhost:3001/comments\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      body: formData\r\n    })\r\n\r\n    const data = await res.json()\r\n    alert(data.message)\r\n    window.location.href=\"\"\r\n  }\r\n\r\n  return (\r\n    <form className=\"comment-form\" onSubmit={handleSubmit}>\r\n      {props.isLoggedIn ? (\r\n        <>\r\n          {\" \"}\r\n          <textarea\r\n          name=\"content\"\r\n            maxLength={300}\r\n            placeholder=\"Add something to the conversation!\"\r\n          />\r\n          <button type=\"submit\">Comment</button>\r\n        </>\r\n      ) : (\r\n        <textarea\r\n            placeholder=\"Need to log in first in order to comment :)\"\r\n            disabled\r\n        ></textarea>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,eAAe,SAASA,aAAaA,CAACC,KAAK,EAAE;EAE3C,eAAeC,YAAYA,CAACC,CAAC,EAAC;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAAC;IACvCF,QAAQ,CAACG,MAAM,CAAC,QAAQ,EAAEP,KAAK,CAACQ,MAAM,CAAC;IACvC;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MACxDC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAET;IACR,CAAC,CAAC;IAEF,MAAMU,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IAC7BC,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC;IACnBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAC,EAAE;EACzB;EAEA,oBACEC,OAAA;IAAMC,SAAS,EAAC,cAAc;IAACC,QAAQ,EAAEtB,YAAa;IAAAuB,QAAA,EACnDxB,KAAK,CAACyB,UAAU,gBACfJ,OAAA,CAAAK,SAAA;MAAAF,QAAA,GACG,GAAG,eACJH,OAAA;QACAM,IAAI,EAAC,SAAS;QACZC,SAAS,EAAE,GAAI;QACfC,WAAW,EAAC;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACFZ,OAAA;QAAQa,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACtC,CAAC,gBAEHZ,OAAA;MACIQ,WAAW,EAAC,6CAA6C;MACzDM,QAAQ;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EACZ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX;AAACG,EAAA,GAtCuBrC,aAAa;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}